{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bac8465e_8a14b66b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 25
      },
      "lineNbr": 16,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2023-05-02T06:26:48Z",
      "side": 1,
      "message": "Can you capture the results in the following order - \n(1) ReadMBRRegister for 0x63 register in normal BMC operation\n(2) InitiateBMCBusyPeriod D-bus call\n(3) ReadMBRRegister for 0x63 register again\n\nThese steps should confirm that initiateBMC busy period worked as expected",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 16,
        "endChar": 24
      },
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a96f689d_f50735f8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 25
      },
      "lineNbr": 16,
      "author": {
        "id": 1001403
      },
      "writtenOn": "2023-05-05T09:00:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bac8465e_8a14b66b",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 16,
        "endChar": 24
      },
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c088ab50_7ab3f9d8",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 34,
      "author": {
        "id": 1000928
      },
      "writtenOn": "2023-04-28T06:41:13Z",
      "side": 1,
      "message": "why not using smaller int types?",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cca478d2_30ee8081",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 34,
      "author": {
        "id": 1001403
      },
      "writtenOn": "2023-05-05T09:00:48Z",
      "side": 1,
      "message": "It is done in same way in pfr.cpp. I got review comments to do in similar way as in pfr.cpp. Further it is passed in the constructor I2CFile(const int\u0026 i2cBus, const int\u0026 slaveAddr, const int\u0026 flags) which takes int as the arguments.",
      "parentUuid": "c088ab50_7ab3f9d8",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d74a126d_41fab4e9",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 205,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2023-05-02T06:26:48Z",
      "side": 1,
      "message": "if i2cConfig is already loaded, probably you can avoid the below d-bus method call to capture the bus and address.",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c013e8f_4e42212c",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 205,
      "author": {
        "id": 1001403
      },
      "writtenOn": "2023-05-05T09:00:48Z",
      "side": 1,
      "message": "This d-bus call was not done earlier. But got the review comments from two people to add this d-bus call and capture bus and Slav address same way as it done in pfr.cpp.",
      "parentUuid": "d74a126d_41fab4e9",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a597b4b_f91f209d",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 207,
      "author": {
        "id": 1000928
      },
      "writtenOn": "2023-04-28T06:41:13Z",
      "side": 1,
      "message": "why i2cConfigLoaded needs o be captured?\nsince its a global variable",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6fabb77_e60f1c2b",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 207,
      "author": {
        "id": 1001403
      },
      "writtenOn": "2023-05-05T09:00:48Z",
      "side": 1,
      "message": "Done. Not captured now.",
      "parentUuid": "4a597b4b_f91f209d",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "662c6835_ca81e68e",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 213,
      "author": {
        "id": 1000928
      },
      "writtenOn": "2023-04-28T06:41:13Z",
      "side": 1,
      "message": "Do we have a resp[0].second.size() method and is it same as checking\nresp[0].second.size() \u003d\u003d 0",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db7be062_430c12a0",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 213,
      "author": {
        "id": 1001403
      },
      "writtenOn": "2023-05-05T09:00:48Z",
      "side": 1,
      "message": "Yes looks like same as checking size. But this code is taken from pfr.cpp. So kept it as it is. Later on maybe changed at both places.",
      "parentUuid": "662c6835_ca81e68e",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1743be43_bd3b4681",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 223,
      "author": {
        "id": 1000928
      },
      "writtenOn": "2023-04-28T06:41:13Z",
      "side": 1,
      "message": "here also i2cConfigLoaded",
      "range": {
        "startLine": 223,
        "startChar": 51,
        "endLine": 223,
        "endChar": 66
      },
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9a353b2_bd827e33",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 223,
      "author": {
        "id": 1001403
      },
      "writtenOn": "2023-05-05T09:00:48Z",
      "side": 1,
      "message": "Done. Not captured now.",
      "parentUuid": "1743be43_bd3b4681",
      "range": {
        "startLine": 223,
        "startChar": 51,
        "endLine": 223,
        "endChar": 66
      },
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5644d07a_236e7e92",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 276,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2023-05-02T06:26:48Z",
      "side": 1,
      "message": "I think we need to add one more argument to set OR reset the black out period bit in CPLD.\n\nAfter the BMC busy period is over, there should be another mechanism to reset the bmcBusy bit in the CPLD register to indicate to the CPLD that it is over",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6051b69c_5a445135",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 276,
      "author": {
        "id": 1001403
      },
      "writtenOn": "2023-05-05T09:00:48Z",
      "side": 1,
      "message": "done. Added one more argument \u0027bool setReset\u0027. If it is true register will be set to high and if it is false register value will be reset.",
      "parentUuid": "5644d07a_236e7e92",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56d52885_fbbc37e7",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 290,
      "author": {
        "id": 1000928
      },
      "writtenOn": "2023-04-28T06:41:13Z",
      "side": 1,
      "message": "What does Placeholder code mean ?",
      "range": {
        "startLine": 290,
        "startChar": 26,
        "endLine": 290,
        "endChar": 27
      },
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fc46b5e_3e70829a",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 290,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2023-05-02T06:26:48Z",
      "side": 1,
      "message": "The comment can be removed now",
      "parentUuid": "56d52885_fbbc37e7",
      "range": {
        "startLine": 290,
        "startChar": 26,
        "endLine": 290,
        "endChar": 27
      },
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d8a20bf_670469dc",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 290,
      "author": {
        "id": 1001403
      },
      "writtenOn": "2023-05-05T09:00:48Z",
      "side": 1,
      "message": "Done. Removed the statement.",
      "parentUuid": "9fc46b5e_3e70829a",
      "range": {
        "startLine": 290,
        "startChar": 26,
        "endLine": 290,
        "endChar": 27
      },
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3f85a88_dfdd961d",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 324,
      "author": {
        "id": 1000928
      },
      "writtenOn": "2023-04-28T06:41:13Z",
      "side": 1,
      "message": "Are we returning -1 as uint8_t here ?",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "398e1fda_788d61c0",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 324,
      "author": {
        "id": 1001403
      },
      "writtenOn": "2023-05-05T09:00:48Z",
      "side": 1,
      "message": "yes if it is returned -1 than output will be 255.",
      "parentUuid": "b3f85a88_dfdd961d",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25a44583_2184ad9b",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 324,
      "author": {
        "id": 1000928
      },
      "writtenOn": "2023-05-16T14:22:44Z",
      "side": 1,
      "message": "OK. so if 0xFF is not a valid response. please use\n\nreturn 0xFF;\n\nwill be straightforward for the reader to understand.",
      "parentUuid": "398e1fda_788d61c0",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "485d1d36_8f8560bb",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 324,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2023-05-17T06:43:13Z",
      "side": 1,
      "message": "It is better to throw a DBus exception. 0xFF could still be a valid value read from the CPLD register and it can cause confusion between what is a valid value v/s error response.",
      "parentUuid": "25a44583_2184ad9b",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57137271_8e10ec94",
        "filename": "service/src/pfr_mgr.cpp",
        "patchSetId": 25
      },
      "lineNbr": 324,
      "author": {
        "id": 1001403
      },
      "writtenOn": "2023-05-20T11:39:26Z",
      "side": 1,
      "message": "Used only throw. As exception message is printed using:\nphosphor::logging::log\u003cphosphor::logging::level::ERR\u003e(\n                    \"Exception caught in mailbox reading.\",\n                    phosphor::logging::entry(\"MSG\u003d%s\", e.what()));",
      "parentUuid": "485d1d36_8f8560bb",
      "revId": "b3a7f4a119799d81182a4abe4a3e3dca6e2ff18c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}