{
  "comments": [
    {
      "key": {
        "uuid": "9fda109c_bbf247a1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 14,
      "author": {
        "id": 1000312
      },
      "writtenOn": "2021-04-23T16:04:30Z",
      "side": 1,
      "message": "Can you add more testing scenarios by inducing PFR errors, i.e. with fw updates of BMC/BIOS/CPLD and image authentication failures etc., in combination with AC/DC cycles.",
      "revId": "c25a5ca293a0f5bd2b5a69f2a75a5078b38ca8ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9030356d_03a7ec70",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 14,
      "author": {
        "id": 1000566
      },
      "writtenOn": "2021-04-28T03:56:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9fda109c_bbf247a1",
      "revId": "c25a5ca293a0f5bd2b5a69f2a75a5078b38ca8ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2a1db8f_46d39aab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 14,
      "author": {
        "id": 1000566
      },
      "writtenOn": "2021-05-10T13:12:03Z",
      "side": 1,
      "message": "Updated the commit message with test cases. I will update the image authentication and launch failures. Thank You",
      "parentUuid": "9030356d_03a7ec70",
      "revId": "c25a5ca293a0f5bd2b5a69f2a75a5078b38ca8ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4846fb0a_94e8da3d",
        "filename": "service/src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 184,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-05-01T00:39:47Z",
      "side": 1,
      "message": "nit: there is a utility method sdbusplus::asio::setProperty you could use.",
      "revId": "c25a5ca293a0f5bd2b5a69f2a75a5078b38ca8ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02a96833_0146e293",
        "filename": "service/src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 208,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-05-01T00:39:47Z",
      "side": 1,
      "message": "nit: prefer to capture shared_ptrs by value.",
      "range": {
        "startLine": 208,
        "startChar": 9,
        "endLine": 208,
        "endChar": 14
      },
      "revId": "c25a5ca293a0f5bd2b5a69f2a75a5078b38ca8ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be765422_b86cf327",
        "filename": "service/src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 208,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-05-05T09:09:53Z",
      "side": 1,
      "message": "Good catch, actually capturing via reference can cause segmentation faults, so it is must fix.\n\ngetAllProperties is a wrapper for async_call it returns immediately  so there will be no valid reference to conn when callback is called also it doesn\u0027t extend lifetime of connection (reference counter is not incremented)",
      "parentUuid": "02a96833_0146e293",
      "range": {
        "startLine": 208,
        "startChar": 9,
        "endLine": 208,
        "endChar": 14
      },
      "revId": "c25a5ca293a0f5bd2b5a69f2a75a5078b38ca8ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba7532f9_b36a9d00",
        "filename": "service/src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 208,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-05-06T22:22:52Z",
      "side": 1,
      "message": "In this instance, you can trace the conn parameter and see that it always references all the way back to the actual object living in main(). So I think this is safe but it\u0027s more work to determine the safety. My rule is use \"const std::shared_ptr\u003c\u003e\u0026\" for function parameters and then always capture shared_ptr into lambdas by value.",
      "parentUuid": "be765422_b86cf327",
      "range": {
        "startLine": 208,
        "startChar": 9,
        "endLine": 208,
        "endChar": 14
      },
      "revId": "c25a5ca293a0f5bd2b5a69f2a75a5078b38ca8ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}